apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cluster-ingress
  annotations:
    kubernetes.io/ingress.class: nginx

    nginx.org/websocket-services: multiplayer-service
    nginx.ingress.kubernetes.io/websocket-services: multiplayer-service

    nginx.ingress.kubernetes.io/affinity: 'cookie'
    nginx.ingress.kubernetes.io/session-cookie-name: 'stickounet'
    nginx.ingress.kubernetes.io/session-cookie-expires: '172800'
    nginx.ingress.kubernetes.io/session-cookie-max-age: '172800'
    # nginx.ingress.kubernetes.io/proxy-read-timeout: '3600'
    # nginx.ingress.kubernetes.io/proxy-send-timeout: '3600'
    # nginx.ingress.kubernetes.io/server-snippets: |
    #   location / {
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_http_version 1.1;
    #     proxy_set_header X-Forwarded-Host $http_host;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_set_header X-Forwarded-For $remote_addr;
    #     proxy_set_header Host $host;
    #     proxy_set_header Connection "upgrade";
    #     proxy_cache_bypass $http_upgrade;
    #     }
spec:
  ingressClassName: nginx
  rules:
    - host: bitsnake.win
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web-service
                port:
                  number: 80
          - path: /multiplayer
            pathType: Prefix
            backend:
              service:
                name: multiplayer-service
                port:
                  number: 4000
  tls:
    - hosts:
        - bitsnake.win
      secretName: tls-secret-multiplayer
